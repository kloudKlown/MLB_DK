library(h2o)
h2o.init()
setwd("~/Sports/MLB/mlbreference")
# ############ Load Library
# install.packages("corrplot")
# install.packages("brnn")
# install.packages("h2o")
# install.packages("randomForest")
# install.packages("Matrix")
# install.packages("xgboost")
# install.packages("stringdist")
# install.packages("varhandle")
# install.packages("mxnet")
library(Hmisc)
library(corrplot)
library(brnn)
library(h2o)
library(randomForest)
library(Matrix)
library(xgboost)
library(stringdist)
library(varhandle)
library(tidyr)
require(devtools)
#install_version("DiagrammeR", version = "0.9.0", repos = "http://cran.us.r-project.org")
require(DiagrammeR)
library(mxnet)
cleanData <- function(data, lowerLimit, higherLimit){
data[data == "NULL"] = 0
data[is.na(data)] = 0
for(i in lowerLimit: higherLimit){
print(i)
if (is.numeric(data[,i]) != TRUE){
data[,i] = as.numeric(levels(data[,i]))[data[,i]]
}
i = i + 1
}
return(data)
}
B2017 = read.csv('All_MLB_Batters_17.csv')
P2017 = read.csv('All_MLB_Pitchers_17.csv')
B2018 = read.csv('All_MLB_Batters_18.csv')
colnames(B2017) = c('Name','Position', 'Gcar','Gtm','Date','Tm','Home','Opp','Rslt','Inngs','PA','AB','R','H','2B','3B','HR','RBI','BB','IBB','SO',
'HBP','SH','SF','ROE','GDP','SB','CS','BA','OBP','SLG','OPS','BOP','aLI','WPA','RE24','DK','FD','Pos')
colnames(B2018) = c('Name','Position', 'Gcar','Gtm','Date','Tm','Home','Opp','Rslt','Inngs','PA','AB','R','H','2B','3B','HR','RBI','BB','IBB','SO',
'HBP','SH','SF','ROE','GDP','SB','CS','BA','OBP','SLG','OPS','BOP','aLI','WPA','RE24','DK','FD','Pos','empty')
## Cleaning Batting 2017
B2017 = cleanData(B2017, 11, 38)
B2017$Home = as.numeric(levels(B2017$Home))[B2017$Home]
B2017$Home[is.na(B2017$Home)] <- 0
B2017$DK = B2017$H*3 + B2017$`2B`*3 + B2017$`3B` * 8 + B2017$HR * 10 + B2017$R * 2 + B2017$BB * 2 + B2017$HBP * 2 + B2017$SB * 5
#Cleaning Batting 2018
B2018 = cleanData(B2018, 11, 38)
B2018$Home = as.numeric(levels(B2018$Home))[B2018$Home]
B2018$Home[is.na(B2018$Home)] <- 0
colnames(P2017) = c('Name','Position','Gcar','Gtm','Date','Tm','Home','Opp','Rslt','Inngs','Dec','DR','IP','H','R',
'ER','BB','SO','HR','HBP','ERA','BF','Pit','Str','StL','StS','GB','FB','LD','PU','Unk',
'GSc','IR','IS','SB','CS','PO','AB','2B','3B','IBB','GDP','SF','ROE','aLI','WPA','RE24','DFS(DK)','DFS(FD)','Entered','Exited','empty')
#Cleaning Pitching 2017
P2017 = cleanData(P2017, 11, 50)
P2017$Home = as.numeric(levels(P2017$Home))[P2017$Home]
P2017$Home[is.na(P2017$Home)] <- 0
P2017$DK = P2017$IP*2.25 + P2017$SO * 2 + P2017$ER * -2 + P2017$H *  -.6 + P2017$BB * -.6
B2017$Date =  as.Date(B2017$Date, "%b %d %Y")
CumulativeBattingStats = B2017[0,]
PlayerList = unique(B2017$Name)
for(i in 1:length(PlayerList)){
subData = subset(B2017, B2017$Name == PlayerList[i])
print(nrow(subData))
subData =  subData[ order(subData$Date), ]
for(j in 1:nrow(subData)){
if ( j < 3){
CumulativeBattingStats = rbind(CumulativeBattingStats, subData[j,])
}
else{
NewRow = subData[j,]
NewRow$PA = mean(subData[(j-3):j,]$PA)
NewRow$AB = mean(subData[(j-3):j,]$AB)
NewRow$R = mean(subData[(j-3):j,]$R)
NewRow$`2B` = mean(subData[(j-3):j,]$`2B`)
NewRow$`3B` = mean(subData[(j-3):j,]$`3B`)
NewRow$HR = mean(subData[(j-3):j,]$HR)
NewRow$RBI = mean(subData[(j-3):j,]$RBI)
NewRow$BB = mean(subData[(j-3):j,]$BB)
NewRow$IBB = mean(subData[(j-3):j,]$IBB)
NewRow$SO = mean(subData[(j-3):j,]$SO)
NewRow$HBP = mean(subData[(j-3):j,]$HBP)
NewRow$SH = mean(subData[(j-3):j,]$SH)
NewRow$SF = mean(subData[(j-3):j,]$SF)
NewRow$ROE = mean(subData[(j-3):j,]$ROE)
NewRow$GDP = mean(subData[(j-3):j,]$GDP)
NewRow$SB = mean(subData[(j-3):j,]$SB)
NewRow$CS = mean(subData[(j-3):j,]$CS)
NewRow$BA = mean(subData[(j-3):j,]$BA)
NewRow$OBP = mean(subData[(j-3):j,]$OBP)
NewRow$SLG = mean(subData[(j-3):j,]$SLG)
NewRow$OPS = mean(subData[(j-3):j,]$OPS)
NewRow$BOP = mean(subData[(j-3):j,]$BOP)
NewRow$aLI = mean(subData[(j-3):j,]$aLI)
NewRow$WPA = mean(subData[(j-3):j,]$WPA)
NewRow$RE24 = mean(subData[(j-3):j,]$RE24)
CumulativeBattingStats = rbind(CumulativeBattingStats, NewRow)
}
}
}
save.image("~/Sports/MLB/mlbreference/copy.RData")
View(CumulativeBattingStats)
View(B2017)
View(B2017)
View(B2018)
write.csv(CumulativeBattingStats, file="CumBatting2017.csv")
library(Hmisc)
library(corrplot)
library(brnn)
library(h2o)
library(randomForest)
library(Matrix)
library(xgboost)
library(stringdist)
library(varhandle)
library(tidyr)
require(devtools)
require(DiagrammeR)
library(mxnet)
CumulativeBattingStats = read.csv("CumBatting2017.csv")
View(CumulativeBattingStats)
